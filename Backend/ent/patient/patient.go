// Code generated by entc, DO NOT EDIT.

package patient

const (
	// Label holds the string label denoting the patient type in the database.
	Label = "patient"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCardID holds the string denoting the card_id field in the database.
	FieldCardID = "card_id"
	// FieldFistName holds the string denoting the fist_name field in the database.
	FieldFistName = "fist_name"
	// FieldLastName holds the string denoting the last_name field in the database.
	FieldLastName = "last_name"
	// FieldAllergic holds the string denoting the allergic field in the database.
	FieldAllergic = "allergic"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"

	// EdgePatients holds the string denoting the patients edge name in mutations.
	EdgePatients = "patients"
	// EdgePatients holds the string denoting the patients edge name in mutations.
	EdgePatients = "patients"
	// EdgePatients holds the string denoting the patients edge name in mutations.
	EdgePatients = "patients"

	// Table holds the table name of the patient in the database.
	Table = "patients"
	// PatientsTable is the table the holds the patients relation/edge.
	PatientsTable = "patients"
	// PatientsInverseTable is the table name for the Gender entity.
	// It exists in this package in order to avoid circular dependency with the "gender" package.
	PatientsInverseTable = "genders"
	// PatientsColumn is the table column denoting the patients relation/edge.
	PatientsColumn = "gender_genders"
	// PatientsTable is the table the holds the patients relation/edge.
	PatientsTable = "patients"
	// PatientsInverseTable is the table name for the Title entity.
	// It exists in this package in order to avoid circular dependency with the "title" package.
	PatientsInverseTable = "titles"
	// PatientsColumn is the table column denoting the patients relation/edge.
	PatientsColumn = "title_titles"
	// PatientsTable is the table the holds the patients relation/edge.
	PatientsTable = "patients"
	// PatientsInverseTable is the table name for the Job entity.
	// It exists in this package in order to avoid circular dependency with the "job" package.
	PatientsInverseTable = "jobs"
	// PatientsColumn is the table column denoting the patients relation/edge.
	PatientsColumn = "job_jobs"
)

// Columns holds all SQL columns for patient fields.
var Columns = []string{
	FieldID,
	FieldCardID,
	FieldFistName,
	FieldLastName,
	FieldAllergic,
	FieldAge,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Patient type.
var ForeignKeys = []string{
	"gender_genders",
	"job_jobs",
	"title_titles",
}

var (
	// CardIDValidator is a validator for the "Card_id" field. It is called by the builders before save.
	CardIDValidator func(string) error
	// FistNameValidator is a validator for the "Fist_name" field. It is called by the builders before save.
	FistNameValidator func(string) error
	// LastNameValidator is a validator for the "Last_name" field. It is called by the builders before save.
	LastNameValidator func(string) error
	// AllergicValidator is a validator for the "Allergic" field. It is called by the builders before save.
	AllergicValidator func(string) error
	// AgeValidator is a validator for the "age" field. It is called by the builders before save.
	AgeValidator func(int) error
)
